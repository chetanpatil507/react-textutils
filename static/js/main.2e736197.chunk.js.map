{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","role","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","rows","onChange","event","target","backgroundColor","disabled","length","newText","toUpperCase","showAlert","toLowerCase","split","filter","element","defaultProps","Alert","height","alert","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2e736197.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link> */}\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                About\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string };\r\n\r\n// if we dont pass the title prop, the follow default value will be set\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase\", \"success\");\r\n  };\r\n\r\n  const handleLoClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase\", \"success\");\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text is cleared\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n    // console.log(\"handle on change\");\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container my-3 \"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            value={text}\r\n            rows=\"8\"\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n          ></textarea>\r\n          <button\r\n            className=\"btn btn-primary my-3 mx-1 my-1\"\r\n            disabled={text.length === 0}\r\n            onClick={handleUpClick}\r\n          >\r\n            Convert to Uppercase\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary my-3 mx-1 my-1\"\r\n            disabled={text.length === 0}\r\n            onClick={handleLoClick}\r\n          >\r\n            Convert to Lowercase\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary my-3 mx-1 my-1\"\r\n            disabled={text.length === 0}\r\n            onClick={handleClearClick}\r\n          >\r\n            Clear Text\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h2>Your Text Summary</h2>\r\n        <p>\r\n          Word count is{\" \"}\r\n          {\r\n            text.split(/\\s+/).filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          }{\" \"}\r\n          and Characters are {text.length}\r\n        </p>\r\n        <p>\r\n          {0.008 *\r\n            text.split(\" \").filter((element) => {\r\n              return element.length !== 0;\r\n            }).length}{\" \"}\r\n          Minutes read\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter something in the textbox to preview it here\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"50px\" }}>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport About from \"./component/About\";\nimport Navbar from \"./component/Navbar\";\nimport TextForm from \"./component/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./component/Alert\";\n// import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      <Navbar title={\"TextUtils\"} mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Routes>\n          <Route exact path=\"/about\" element={<About />}></Route>\n          <Route\n            exact\n            path=\"/\"\n            element={ */}\n        <TextForm\n          showAlert={showAlert}\n          mode={mode}\n          heading={\"Enter the text to analyze\"}\n        />\n        {/* }\n          ></Route>\n        </Routes> */}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// import { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <BrowserRouter> */}\n    <App />\n    {/* </BrowserRouter> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}